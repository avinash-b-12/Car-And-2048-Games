#include <stdio.h>
#include <conio.h>
#include <graphics.h>
#include <stdlib.h>
#include <time.h>
#include <windows.h>
typedef struct{
    char name[100];
    int scr;
}Reads;
void road(){
    line(0,480,640,480);
    line(0,100,640,100);
    line(0,480,250,100);
    line(200,480,300,100);
    line(400,480,350,100);
    line(640,480,400,100);
    arc(325,100,0,180,50);
    setfillstyle(SOLID_FILL,YELLOW);
    floodfill(350,70,WHITE);
    setfillstyle(SOLID_FILL,LIGHTCYAN);
    floodfill(350,30,WHITE);
    setfillstyle(SOLID_FILL,RED);
    floodfill(100,150,WHITE);
    floodfill(500,150,WHITE);
    line(0,100,100,50);
    line(100,50,200,100);
    setfillstyle(SOLID_FILL,BROWN);
    floodfill(50,80,WHITE);
    line(160,80,200,50);
    line(200,50,275,100);
    floodfill(200,80,WHITE);
    line(375,100,450,50);
    line(450,50,490,76);
    //floodfill(400,90,WHITE);
    line(440,100,540,50);
    line(640,100,540,50);
    floodfill(440,75,WHITE);
    floodfill(600,90,WHITE);
}
void left_lane(){
    line(40,470,175,470);
    line(5,500,190,500);
    line(40,470,10,500);
    line(175,470,190,500);
    line(90,400,175,400);
    line(90,400,5,500);
    line(175,400,190,500);
    line(0,480,640,480);
    setfillstyle(SOLID_FILL,LIGHTGRAY);
    //int pts[]={50,450,180,450,215,350,115,350,50,450};
    //drawpoly(5,pts);
    floodfill(100,475,WHITE);
    //line(115,350,130,340);
    //line(215,350,205,340);
    //line(130,340,205,340);
    setfillstyle(SOLID_FILL,LIGHTRED);
    floodfill(125,450,WHITE);
}
void center_lane(){
    line(260,400,350,400);
    line(220,500,385,500);
    line(260,400,220,500);
    line(350,400,385,500);
    line(245,470,360,470);
    line(245,470,230,500);
    line(360,470,370,500);
    line(0,480,640,480);
    setfillstyle(SOLID_FILL,LIGHTGRAY);
    //int pts[]={235,450,375,450,365,350,255,350,235,450};
    //drawpoly(5,pts);
     floodfill(300,475,WHITE);
    setfillstyle(SOLID_FILL,LIGHTRED);
    //line(365,350,355,340);
    //line(255,350,267,340);
    //line(355,340,267,340);
    floodfill(300,450,WHITE);
}
void right_lane(){
    line(435,400,545,400);
    line(410,500,630,500);
    line(435,400,410,500);
    line(545,400,630,500);
    line(430,470,590,470);
    line(430,470,415,500);
    line(590,470,620,500);
    //line(0,410,640,410);
    line(0,479,640,479);
    setfillstyle(SOLID_FILL,LIGHTRED);
    //int pts[]={425,450,590,450,530,350,405,350,425,450};
    //drawpoly(5,pts);
    floodfill(475,450,WHITE);
    setfillstyle(SOLID_FILL,LIGHTGRAY);
    //line(405,350,415,340);
    //line(530,350,515,340);
    //line(415,340,515,340);
    floodfill(475,475,WHITE);
}
void obstacle(int cenx,int ceny,int rad){
    arc(cenx,ceny,0,180,rad);
    line(cenx-rad,ceny,cenx+rad,ceny);
    setfillstyle(SOLID_FILL,MAGENTA);
    floodfill(cenx,ceny-rad/2,WHITE);
}
int main(){
    int gdriver = DETECT, gmode;
    initgraph(&gdriver, &gmode,"");
    L:
        int print=0;
    outtextxy(0,print,"Welcome to the game of Racing.");
    print+=20;
    print+=20;

    outtextxy(0,print,"Here are some rules and regulations.");
    print+=20;

    outtextxy(0,print,"Follow the rules and have a happy gaming");
    print+=40;

    outtextxy(0,print,"1. The coloured object at the bottom is your car.");
    print+=20;

    outtextxy(0,print,"2. The semi-circular moving objects are the obstacles.");
    print+=20;

    outtextxy(0,print,"3. There are three lanes in which your car can move.");
    print+=20;

    outtextxy(0,print,"4. To move your car left , press 'A'.");
    print+=20;

    outtextxy(0,print,"5. To move your car right , press 'D'.");
    print+=20;

    outtextxy(0,print,"6. The game continues till your car dashes on any of the obstacles");
    print+=20;

    outtextxy(0,print,"7. The score for surpassing one obstacle is 10.");
    print+=20;

    outtextxy(0,print,"8. The number of obstacles increases as time goes.");
    print+=20;

    outtextxy(0,print,"9. At the most 3 obstacles will be generated by the computer.");
    print+=20;

    outtextxy(0,print,"10. If 3 obstacles come at near spaces don't worry. You car won't dash and you are still alive");
    print+=20;

    outtextxy(0,print,"11 . The final score will also be printed finally.");
    print+=20;

    outtextxy(0,print,"12. Try your best so that you can get your name in the Highscoreres list.");
    print+=40;

    outtextxy(0,print,"GOOD LUCK");
    print+=40;

    outtextxy(0,print,"Press any key to continue :\n");
    getch();

    cleardevice();
    road();
    left_lane();
    char w='\0';
    while(w=='\0'){
            road();
            left_lane();
         if(kbhit()){
            w=getch();
         }
         delay(1000);
         outtextxy(440,120,"press any key to continue.");
         delay(1000);
         cleardevice();
         if(kbhit()){
            w=getch();
         }
        road();
        left_lane();
    }
    int obs1,obs2,obs3,obx1,oby1,obx2,oby2,obx3,oby3,r1,r2,r3;
    int i,j,cnt=0;
    int c1=1,c2=1,c3=1;
    int ctrl=1,score=0;
    int i1,i2,i3,j1,j2,j3,flag=0,ft=1;
    char movement;
    center_lane();
    char st[10];
    for(i1=275,j1=100,i2=325,j2=95,i3=375,j3=90,obx3=0,oby3=0,r1=20,r2=20,r3=20,obx1=0,oby1=0,obx2=0,oby2=0;j1<480;i1-=obx1/2,j1+=oby1,i2-=obx2/10,j2+=oby2,i3+=obx3/2.5,j3+=oby3,r1+=obx1/5,r2+=obx2/5,r3+=obx3/5){
            outtextxy(450,10,"Score : ");
            sprintf(st,"%d",score);
            outtextxy(500,10,st);
        if(kbhit()){
            movement=getch();
        }
        if((movement=='a' || movement=='A') && ctrl<=3 && ctrl>1){
            ctrl-=1;
            movement='z';
        }
        if((movement=='d' || movement=='D') && ctrl>=1 && ctrl<3){
            ctrl+=1;
            movement='z';
        }
                if(ctrl==1){
            left_lane();
        }
        if(ctrl==2){
            center_lane();
        }
        if(ctrl==3){
            right_lane();
        }
        char strt[10];
            obstacle(i1,j1,r1);
        obx1++;
        oby1++;
        obx2++;
        oby2++;
        obx3++;
        oby3++;
        if(cnt==2 && !flag){
                flag=1;
            i2=325;
            j2=95;
            r2=20;
        }
        if(j2<=100){
            i2=325;
            obx2=1;
            oby2=1;
            r2=20;
        }
        if(j3<=100){
            i3=375;
            obx3=1;
            oby3=1;
            r3=20;
        }
        if(cnt>1 && j2>=100){
               obstacle(i2,j2,r2);
        }
        if(cnt>2 && j3>=100){
            obstacle(i3,j3,r3);
        }
        if(j1>=478){
                score+=10;
            obx1=0;
            oby1=0;
            r1=20;
            j1=100;
            i1=275;
            cnt++;
            if(cnt==2 && ft){
                flag=0;
                ft=0;
            }
            //if(cnt>=2 && flag){
                //c1=0;
              //  c2=1;
            //}
        }
        if(j2>=478){

            obx2=0;
            oby2=0;
            r2=20;
            j2=95;
            i2=325;
            if(cnt>=2 && flag){
                score+=10;
            }
        }
        if(j3>=478){
            obx3=0;
            oby3=0;
            r3=20;
            j3=90;
            i3=375;
            if(cnt>=2 && flag){
                score+=10;
            }
        }
        //line(0,400,600,400);
        if(((j1-j2>=40 || j2-j1>=40) && (j2-j3>=40 || j3-j2>=40)) && ((j1>=400 && ctrl==1) || (j2>=400 && cnt>=2 && ctrl==2) || (j3>=400 && cnt>=3 && ctrl==3))){

            delay(3000);
            cleardevice();
            outtextxy(100,100,"Gameover");
            Beep(5000,3000);
            outtextxy(100,120,"Score : ");
            outtextxy(150,120,st);
            Reads a[5];
            FILE *fp=fopen("Highscore_CarRace.txt","r");
            for(i=0;i<5;i++){
                  fscanf(fp,"%s%d",a[i].name,&a[i].scr);
            }
            for(i=0;i<5;i++){
                        if(score>=a[i].scr){
                            outtextxy(100,200,"New Highscore!!!");
                            delay(2000);
                            outtextxy(100,240,"Enter your name.");
                            char inputbuf[100]={'\n'},c;
                            int input_pos=0,the_end=0;
                            do{
                            cleardevice();
                            outtextxy(100,200,"New Highscore!!!");
                            outtextxy(100,240,"Enter your name.");
                            outtextxy(100,100,"Gameover.");
                            outtextxy(100,120,"Score :");
                            //sprintf(str,"%d",score);
                            outtextxy(150,120,st);
                            outtextxy(100,260,inputbuf);
                            c=getch();
                            switch(c){
                            case 8:
                                if(input_pos){
                                        input_pos--;
                                        inputbuf[input_pos]='\n';
                                }
                            break;
                            case 13:
                                the_end=1;
                                break;
                            case 27:
                                inputbuf[0]=0;
                                the_end=1;
                                break;
                            case ' ':
                                the_end=1;
                                break;
                             default:
                                if(input_pos<99 && c>=' ' && c<='~'){
                                    inputbuf[input_pos]=c;
                                    input_pos++;
                                    inputbuf[input_pos]=0;
                                }
                            }
                        }while(!the_end);
                        char temp[100];
                        strcpy(temp,a[i].name);
                        strcpy(a[i].name,"");
                        strcpy(a[i].name,inputbuf);
                        int tmp=a[i].scr;
                        a[i].scr=score;
                        for(j=i+1;j<5;j++){
                            char t[100];
                            int ts;
                            ts=a[j].scr;
                            strcpy(t,a[j].name);
                            a[j].scr=tmp;
                            strcpy(a[j].name,temp);
                            tmp=ts;
                            strcpy(temp,t);
                        }
                        cleardevice();
                        outtextxy(125,100,"HIGH SCORES");
                        int z;
                        for(z=0;z<5;z++){
                            char str[100];
                            char number[10];
                            sprintf(number,"%d",z+1);
                            strcat(number,".");
                            outtextxy(30,150+20*z,number);
                            sprintf(str,"%d",a[z].scr);
                            outtextxy(50,150+20*z,a[z].name);
                            outtextxy(250,150+20*z,str);
                        }
                        fclose(fp);
                        fp=fopen("Highscore_CarRace.txt","w");
                        for(z=0;z<5;z++){
                            fprintf(fp,"%s\t%d\n",a[z].name,a[z].scr);
                        }
                        fclose(fp);
                        break;
                    }
            }
            delay(4000);
            cleardevice();
                outtextxy(100,200,"Do you want to play another Car Race game.");
                outtextxy(100,220,"Enter Y (or) y for Yes.");
                outtextxy(100,240,"Enter N (or) n for No.");
                delay(1000);
                char c;
                c=getch();
                while(!(c=='Y' || c=='y' || c=='N' || c=='n')){
                    c=getch();
                }
               if(c=='Y' || c=='y'){
                    delay(0);
                    outtextxy(100,300,"Starting....");
                    delay(3000);
                    goto L;
               }
               else{
                    outtextxy(100,300,"Ending....");
                    delay(1000);
                    return 0;
                    //exit(0);
               }
        }
        delay(50);
        cleardevice();
        road();
        //left_lane();
    }
    getch();
    closegraph();
    return 0;
}

